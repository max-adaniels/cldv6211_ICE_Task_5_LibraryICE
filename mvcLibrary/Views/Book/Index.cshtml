@model IEnumerable<mvcLibrary.Models.Book>

@{
    ViewData["Title"] = "Index";
}

<h1>Index</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>
@*@using (Html.BeginForm("Index", "Book", FormMethod.Get))@*(𝐂𝐨𝐝𝐞𝐖𝐢𝐭𝐡𝐆𝐨𝐩𝐢, 2022)*
{
    <table>
        <tr>
        <tr>
            <td>
                    @Html.TextBox("searchValue", ViewData["searchValue"], new { Class = "form-control", placeholder = "Enter search value..." }) @*(𝐂𝐨𝐝𝐞𝐖𝐢𝐭𝐡𝐆𝐨𝐩𝐢, 2022)*
            </td>
            <td>
                <input type="submit" value="Search for a book" class="btn btn-primary" />
            </td>
            <td>
                <a asp-action="Index" class="btn btn-secondary">Clear</a>
            </td>
        </tr>
    </table>
}*@
@using (Html.BeginForm("Index", "Book", FormMethod.Get))
{
    <div class="form-row">
        <div class="form-group col-md-3">
            <label for="nameFilter">Search by Name</label>
            <input type="text" class="form-control" id="nameFilter" name="nameFilter" value="@ViewBag.NameFilter" />
        </div>
        <div class="form-group">
            <div class="form-group col-md-3">
                <label for="typeFilter">Filter by Type</label>
                @Html.DropDownList("typeFilter", (SelectList)ViewBag.TypeOptions, "All types", new { @class = "form-control" })
            </div>
            <div class="form-group">
                <input type="submit" value="Filter" class="btn btn-primary" />
                <a asp-action="Index" class="btn btn-secondary">Clear</a>
            </div>
        </div>
    </div>
}


<!-- Display No Results Message if Model is Empty -->
@if (Model.Count() == 0)
{
    <div class="alert alert-info" role="alert">
        No results found. Please try another search term.
    </div>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.Title)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Author)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.ISBN)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Type)
                </th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.Title)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Author)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.ISBN)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Type.Type)
                    </td>
                    <td>
                        <a asp-action="Edit" asp-route-id="@item.BookID">Edit</a> |
                        <a asp-action="Details" asp-route-id="@item.BookID">Details</a> |
                        <a asp-action="Delete" asp-route-id="@item.BookID">Delete</a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}